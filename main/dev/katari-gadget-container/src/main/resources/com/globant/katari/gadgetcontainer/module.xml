<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:katari="http://www.globant.com/schema/katari"
  xmlns:camel="http://camel.apache.org/schema/spring"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.globant.com/schema/katari
    http://www.globant.com/schema/katari/katari.xsd
    http://camel.apache.org/schema/spring
    http://camel.apache.org/schema/spring/camel-spring.xsd">

  <bean id="gadgetcontainer.module"
    class="com.globant.katari.core.web.ConfigurableModule">
    <!-- Gadget container module -->
    <property name="entryPoints">
      <!--
        The servlet mappings. It maps the spring DispatcherServlet to *.do.
      -->
      <bean class="org.springframework.beans.factory.config.MapFactoryBean">
        <property name="sourceMap">
          <map>
            <entry key="/assets/.*">
              <bean class="com.globant.katari.core.web.ServletAndParameters">
                <constructor-arg index="0">
                  <bean class="com.globant.katari.core.web.StaticContentServlet" />
                </constructor-arg>
                <constructor-arg index="1">
                  <map>
                    <!--
                      WARNING: Be careful with the value
                      staticContentPath: if it starts with '/' it won't
                      work under Tomcat.
                    -->
                    <entry key="staticContentPath"
                      value="com/globant/katari/gadgetcontainer/view/" />
                    <entry key="debug" value-ref='debugMode' />
                    <entry key="debugPrefix"
                      value="../katari-gadget-container/src/main/resources" />
                    <entry key="requestCacheContent" value="true" />
                    <entry key="mimeType_html" value="text/html" />
                    <entry key="mimeType_png" value="image/png" />
                    <entry key="mimeType_gif" value="image/gif" />
                    <entry key="mimeType_css" value="text/css" />
                    <entry key="mimeType_js" value="text/javascript" />
                    <entry key="mimeType_ico" value="image/vnd.microsoft.icon" />
                  </map>
                </constructor-arg>
              </bean>
            </entry>
            <!-- The spring-mvc controller servlet -->
            <entry key="(.*do|.*katariSocialCanvas.js)">
              <bean class="com.globant.katari.core.web.ServletAndParameters">
                <constructor-arg index="0">
                  <bean class="com.globant.katari.core.web.DispatcherServlet" />
                </constructor-arg>
                <constructor-arg index="1">
                  <map>
                    <entry key="contextConfigLocation">
                      <value>
                        classpath:/com/globant/katari/gadgetcontainer/view/spring-servlet.xml
                      </value>
                    </entry>
                  </map>
                </constructor-arg>
              </bean>
            </entry>
          </map>
        </property>
      </bean>
    </property>
  </bean>

  <!-- Adds relay to html validation ignored list. -->
  <bean class='com.globant.katari.core.web.ListFactoryAppender'>
    <constructor-arg value='katari.htmlValidator.ignoredUrlpatterns' />
    <constructor-arg>
      <list>
        <value>.*/gadgetcontainer/assets/rpc_relay.html.*</value>
      </list>
    </constructor-arg>
  </bean>

  <!-- JPA classes -->
  <bean class='com.globant.katari.core.web.ListFactoryAppender'>
    <constructor-arg value='katari.persistentClasses' />
    <constructor-arg>
      <list>
        <value>com.globant.katari.gadgetcontainer.domain.GadgetGroup</value>
        <value>
          com.globant.katari.gadgetcontainer.domain.CustomizableGadgetGroup
        </value>
        <value>
          com.globant.katari.gadgetcontainer.domain.SharedGadgetGroup
        </value>
        <value>
          com.globant.katari.gadgetcontainer.domain.GadgetGroupTemplate
        </value>
        <value>com.globant.katari.gadgetcontainer.domain.GadgetInstance</value>
      </list>
    </constructor-arg>
  </bean>

  <!-- Repositories -->
  <bean id='gadgetcontainer.gadgetGroupRepository'
    class='com.globant.katari.gadgetcontainer.domain.GadgetGroupRepository'>
    <property name='sessionFactory'>
      <ref bean='katari.sessionFactory' />
    </property>
  </bean>

  <bean id='gadgetcontainer.applicationRepository'
    class='com.globant.katari.gadgetcontainer.domain.ApplicationRepository'>
    <property name='sessionFactory'>
      <ref bean='katari.sessionFactory' />
    </property>
  </bean>

  <bean id='gadgetcontainer.userService'
    class='com.globant.katari.gadgetcontainer.domain.ContextUserService' />

  <bean id='gadgetcontainer.tokenService'
    class='com.globant.katari.gadgetcontainer.application.TokenService'>
    <constructor-arg index="0" ref="shindig.tokenCrypter" />
    <constructor-arg index="1" ref="shindig.containerDomain" />
    <constructor-arg index="2" ref="shindig.containerName" />
  </bean>

  <!-- Adds a listener to the delete user event to remove the gadget groups
       owned by the user. -->
  <bean class='com.globant.katari.core.web.ListFactoryAppender'>
    <constructor-arg index='0' value='user.deleteUserListeners'/>
    <!-- Don't complain if the user.deleteUserListeners list is not defined. -->
    <constructor-arg index='1' value='true'/>
    <constructor-arg index='2'>
      <list>
        <bean class='org.apache.camel.model.ToDefinition'
          p:uri='bean:gadgetcontainer.deleteUserListener' />
      </list>
    </constructor-arg>
  </bean>

  <!--
  <camel:endpoint id='gadgetcontainer.deleteUserEndpoint'
    uri='bean:gadgetcontainer.deleteUserListener'/>
    -->

  <bean id='gadgetcontainer.deleteUserListener'
    class='com.globant.katari.gadgetcontainer.application.DeleteUserListener'>
    <constructor-arg ref='gadgetcontainer.gadgetGroupRepository'/>
  </bean>

  <!-- Hook to allow module writers to configure who can see other's gadgets.
       -->
  <katari:null id='gadgetcontainer.viewOwnerRestriction'/>

  <!-- vim: set ts=2 sw=2 et ai: -->
</beans>

