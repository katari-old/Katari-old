<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:flow="http://www.springframework.org/schema/webflow-config"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/webflow-config
    http://www.springframework.org/schema/webflow-config/spring-webflow-config-1.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-2.0.xsd">

  <bean id="freemarkerConfig"
      class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath"
        value="classpath:com/globant/katari/cas/view"/>
  </bean>

  <!-- Message source for this context, loaded from localized "messages_xx" files -->
  <bean id="messageSource"
      class="org.springframework.context.support.ResourceBundleMessageSource"
      p:basename="messages" />

  <!-- ID Generators -->
  <bean id="ticketGrantingTicketUniqueIdGenerator"
      class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
    <constructor-arg index="0" value="50" />
  </bean>

  <bean id="servicesManager"
      class="org.jasig.cas.services.DefaultServicesManagerImpl">
    <constructor-arg index="0" ref="serviceRegistryDao" />
  </bean>

  <bean id="attributeRepository"
    class="org.jasig.services.persondir.support.StubPersonAttributeDao">
    <property name="backingMap">
      <map>
        <entry key="uid" value="uid" />
        <entry key="eduPersonAffiliation" value="eduPersonAffiliation" />
        <entry key="groupMembership" value="groupMembership" />
      </map>
    </property>
  </bean>

  <bean id="serviceRegistryDao"
    class="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl" />

  <bean id="httpClient" class="org.jasig.cas.util.HttpClient"
    p:readTimeout="5000"
    p:connectionTimeout="5000" />

  <bean id="serviceTicketUniqueIdGenerator"
      class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
    <constructor-arg index="0" value="20" />
  </bean>

  <bean id="samlServiceTicketUniqueIdGenerator"
      class="org.jasig.cas.util.SamlCompliantUniqueTicketIdGenerator">
    <constructor-arg index="0" value="https://localhost:8443" />
  </bean>

  <!-- Expiration policies -->
  <bean id="serviceTicketExpirationPolicy"
      class="org.jasig.cas.ticket.support.MultiTimeUseOrTimeoutExpirationPolicy">
    <!-- This argument is the number of times that a ticket can be used before
    its considered expired. -->
    <constructor-arg index="0" value="1" />

    <!-- This argument is the time a ticket can exist before its considered
    expired.  -->
    <constructor-arg index="1" value="300000" />
  </bean>

  <bean id="grantingTicketExpirationPolicy"
      class="org.jasig.cas.ticket.support.TimeoutExpirationPolicy">
    <!-- This argument is the time a ticket can exist before its considered
    expired.  -->
    <constructor-arg index="0" value="7200000" />
  </bean>

  <bean id="persistentIdGenerator"
      class="org.jasig.cas.authentication.principal.ShibbolethCompatiblePersistentIdGenerator"
      p:salt="casrocks" />

  <!-- CentralAuthenticationService -->
  <bean id="centralAuthenticationService"
    class="org.jasig.cas.CentralAuthenticationServiceImpl"
    p:ticketGrantingTicketExpirationPolicy-ref="grantingTicketExpirationPolicy"
    p:serviceTicketExpirationPolicy-ref="serviceTicketExpirationPolicy"
    p:authenticationManager-ref="casAuthenticationManager"
    p:ticketGrantingTicketUniqueTicketIdGenerator-ref="ticketGrantingTicketUniqueIdGenerator"
    p:ticketRegistry-ref="cas.ticketRegistry"
    p:servicesManager-ref="servicesManager"
    p:persistentIdGenerator-ref="persistentIdGenerator">
    <property
      name="uniqueTicketIdGeneratorsForService">
        <map>
          <entry
            key="org.jasig.cas.authentication.principal.SimpleWebApplicationServiceImpl"
            value-ref="serviceTicketUniqueIdGenerator" />
          <entry
            key="org.jasig.cas.authentication.principal.OpenIdService"
            value-ref="serviceTicketUniqueIdGenerator" />
          <entry
            key="org.jasig.cas.authentication.principal.SamlService"
            value-ref="samlServiceTicketUniqueIdGenerator" />
          <entry
            key="org.jasig.cas.authentication.principal.GoogleAccountsService"
            value-ref="serviceTicketUniqueIdGenerator" />
        </map>
      </property>
  </bean>

  <bean id="proxy10Handler"
      class="org.jasig.cas.ticket.proxy.support.Cas10ProxyHandler" />

  <bean id="proxy20Handler"
    class="org.jasig.cas.ticket.proxy.support.Cas20ProxyHandler"
    p:httpClient-ref="httpClient" />

  <!-- This was moved to the module definition because this application context
  does not get informed when the application is shut down, so quartz does not
  have the chance to stop in time.
  TODO Find a way for this context to get notified when the parent shuts down.
  -->
  <!-- Ticket Registry -->
  <!--
  <bean id="ticketRegistry"
      class="org.jasig.cas.ticket.registry.DefaultTicketRegistry" />
    -->

  <!--Quartz -->
  <!-- TICKET REGISTRY CLEANER -->
  <!--
  <bean id="ticketRegistryCleaner"
    class="org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner"
    p:ticketRegistry-ref="ticketRegistry" />

  <bean id="jobDetailTicketRegistryCleaner"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
    p:targetObject-ref="ticketRegistryCleaner"
    p:targetMethod="clean" />

  <bean id="triggerJobDetailTicketRegistryCleaner"
    class="org.springframework.scheduling.quartz.SimpleTriggerBean"
    p:jobDetail-ref="jobDetailTicketRegistryCleaner"
    p:startDelay="20000"
    p:repeatInterval="5000000" />

  <bean id="scheduler"
    class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
    destroy-method="destroy">
    <property name="triggers">
      <list>
        <ref local="triggerJobDetailTicketRegistryCleaner" /> </list>
    </property>
  </bean>
  -->

  <!-- ADVISORS -->
  <bean id="advisorAutoProxyCreator"
    class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
  />

  <bean id="notNullAnnotationBeanPostProcessor"
      class="org.jasig.cas.util.annotation.NotNullAnnotationBeanPostProcessor"
  />

  <bean id="greaterThanAnnotationBeanPostProcessor"
      class="org.jasig.cas.util.annotation.GreaterThanAnnotationBeanPostProcessor"
  />

  <bean id="notEmptyAnnotationBeanPostProcessor"
      class="org.jasig.cas.util.annotation.NotEmptyAnnotationBeanPostProcessor"
  />

  <bean id="isInAnnotationBeanPostProcessor"
      class="org.jasig.cas.util.annotation.IsInAnnotationBeanPostProcessor" />

  <!-- Theme Resolver -->
  <bean id="themeResolver" class="org.jasig.cas.services.web.ServiceThemeResolver"
      p:defaultThemeName="default"
      p:argumentExtractors-ref="argumentExtractors" />

  <!-- View Resolver -->
  <bean id="viewResolver"
      class="org.springframework.web.servlet.view.ResourceBundleViewResolver"
      p:basename="com/globant/katari/cas/view/default_views"
      p:order="0" />

  <!-- Locale Resolver -->
  <bean id="localeResolver"
      class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

  <bean id="localeChangeInterceptor"
      class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />

  <bean id="urlBasedViewResolver"
      class="org.springframework.web.servlet.view.UrlBasedViewResolver"
      p:viewClass="org.springframework.web.servlet.view.AbstractUrlBasedView" />

  <bean id="errorHandlerResolver"
      class="org.jasig.cas.web.NoSuchFlowExecutionExceptionResolver" />

  <!-- Handler Mapping -->
  <bean id="handlerMappingB"
      class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property
      name="mappings">
      <props>
        <prop key="/login">loginController</prop>
      </props>
    </property>
    <property
      name="interceptors">
      <list> <ref bean="localeChangeInterceptor" /> </list>
    </property>
  </bean>

  <bean id="handlerMappingC"
      class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property
      name="mappings">
      <props>
        <prop key="/logout"> logoutController </prop>
        <prop key="/serviceValidate"> serviceValidateController </prop>
        <prop key="/validate"> legacyValidateController </prop>
        <prop key="/proxy"> proxyController </prop>
        <prop key="/proxyValidate"> proxyValidateController </prop>
        <prop key="/samlValidate"> samlValidateController </prop>
        <prop key="/services/add.html">
          addRegisteredServiceSimpleFormController
        </prop>
        <prop key="/services/edit.html">
          editRegisteredServiceSimpleFormController
        </prop>
        <prop key="/services/loggedOut.html">
          serviceLogoutViewController
        </prop>
        <prop key="/services/*">
          manageRegisteredServicesMultiActionController
        </prop>
        <!--
        <prop key="/openid/*">openIdProviderController</prop>
          -->
      </props>
    </property>
    <property name="alwaysUseFullPath" value="true" />
    <!--
    uncomment this to enable sending PageRequest events.
    <property
      name="interceptors">
      <list>
        <ref bean="pageRequestHandlerInterceptorAdapter" />
      </list>
    </property>
     -->
  </bean>

  <!-- bean
    id="openIdProviderController"
    class="org.jasig.cas.web.OpenIdProviderController"
    p:loginUrl="${cas.securityContext.casProcessingFilterEntryPoint.loginUrl}" / -->

  <bean
    id="serviceLogoutViewController"
    class="org.springframework.web.servlet.mvc.ParameterizableViewController"
    p:viewName="serviceLogoutView" />

  <bean
    id="loginController"
    class="org.springframework.webflow.executor.mvc.FlowController"
    p:flowExecutor-ref="flowExecutor"
    p:defaultFlowId="login-webflow">
    <property
      name="argumentHandler">
      <bean class="org.springframework.webflow.executor.support.RequestParameterFlowExecutorArgumentHandler"
        p:flowExecutionKeyArgumentName="lt"
        p:defaultFlowId="login-webflow" />
    </property>
  </bean>

  <flow:executor id="flowExecutor" registry-ref="flowRegistry">
    <flow:execution-attributes>
      <flow:alwaysRedirectOnPause value="false"/>
    </flow:execution-attributes>
  </flow:executor>

  <flow:registry id="flowRegistry">
    <flow:location
        path="classpath:com/globant/katari/cas/login-webflow.xml"/>
  </flow:registry>

  <bean id="proxyValidateController"
    class="org.jasig.cas.web.ServiceValidateController"
    p:centralAuthenticationService-ref="centralAuthenticationService"
    p:proxyHandler-ref="proxy20Handler"
    p:argumentExtractor-ref="casArgumentExtractor" />

  <bean id="serviceValidateController"
    class="org.jasig.cas.web.ServiceValidateController"
    p:validationSpecificationClass="org.jasig.cas.validation.Cas20WithoutProxyingValidationSpecification"
    p:centralAuthenticationService-ref="centralAuthenticationService"
    p:proxyHandler-ref="proxy20Handler"
    p:argumentExtractor-ref="casArgumentExtractor" />

  <bean id="samlValidateController"
    class="org.jasig.cas.web.ServiceValidateController"
    p:validationSpecificationClass="org.jasig.cas.validation.Cas20WithoutProxyingValidationSpecification"
    p:centralAuthenticationService-ref="centralAuthenticationService"
    p:proxyHandler-ref="proxy20Handler"
    p:argumentExtractor-ref="samlArgumentExtractor"
    p:successView="casSamlServiceSuccessView"
    p:failureView="casSamlServiceFailureView" />

  <bean id="legacyValidateController"
    class="org.jasig.cas.web.ServiceValidateController"
    p:proxyHandler-ref="proxy10Handler"
    p:successView="cas1ServiceSuccessView"
    p:failureView="cas1ServiceFailureView"
    p:validationSpecificationClass="org.jasig.cas.validation.Cas10ProtocolValidationSpecification"
    p:centralAuthenticationService-ref="centralAuthenticationService"
    p:argumentExtractor-ref="casArgumentExtractor" />

  <bean id="proxyController" class="org.jasig.cas.web.ProxyController"
    p:centralAuthenticationService-ref="centralAuthenticationService" />

  <bean id="logoutController" class="org.jasig.cas.web.LogoutController"
    p:centralAuthenticationService-ref="centralAuthenticationService"
    p:logoutView="casLogoutView"
    p:followServiceRedirects="true"
    p:warnCookieGenerator-ref="warnCookieGenerator"
    p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator" />

  <bean id="initialFlowSetupAction"
    class="org.jasig.cas.web.flow.InitialFlowSetupAction"
    p:argumentExtractors-ref="argumentExtractors"
    p:warnCookieGenerator-ref="warnCookieGenerator"
    p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator" />

  <bean id="authenticationViaFormAction"
    class="org.jasig.cas.web.flow.AuthenticationViaFormAction"
    p:centralAuthenticationService-ref="centralAuthenticationService"
    p:warnCookieGenerator-ref="warnCookieGenerator" />

  <bean id="generateServiceTicketAction"
    class="org.jasig.cas.web.flow.GenerateServiceTicketAction"
    p:centralAuthenticationService-ref="centralAuthenticationService" />

  <bean id="sendTicketGrantingTicketAction"
    class="org.jasig.cas.web.flow.SendTicketGrantingTicketAction"
    p:centralAuthenticationService-ref="centralAuthenticationService"
    p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator" />

<!--
  <bean
    id="x509Check"
    parent="abstractCasLoginAction"
    class="org.jasig.cas.adaptors.x509.web.flow.X509CertificateCredentialsNonInteractiveAction" />
 -->

  <bean
    id="casArgumentExtractor"
    class="org.jasig.cas.web.support.CasArgumentExtractor" />

  <util:list id="argumentExtractors">
    <ref bean="casArgumentExtractor" />
    <ref bean="samlArgumentExtractor" />
  </util:list>

  <bean id="samlArgumentExtractor"
      class="org.jasig.cas.web.support.SamlArgumentExtractor" />

  <bean id="warnCookieGenerator"
    class="org.jasig.cas.web.support.CookieRetrievingCookieGenerator"
    p:cookieSecure="false"
    p:cookieMaxAge="-1"
    p:cookieName="CASPRIVACY"
    p:cookiePath="/cas" />

  <bean id="ticketGrantingTicketCookieGenerator"
    class="org.jasig.cas.web.support.CookieRetrievingCookieGenerator"
    p:cookieSecure="false"
    p:cookieMaxAge="-1"
    p:cookieName="CASTGC"
    p:cookiePath="/cas" />

  <bean id="dynamicRedirectViewSelector"
      class="org.jasig.cas.web.flow.DynamicRedirectViewSelector" />

    <!--
    <bean id="openIdSingleSignOnAction"
      class="org.jasig.cas.web.flow.OpenIdSingleSignOnAction"
      p:centralAuthenticationService-ref="centralAuthenticationService" />
  -->
  <bean id="addRegisteredServiceSimpleFormController"
    class="org.jasig.cas.services.web.RegisteredServiceSimpleFormController"
    p:formView="addServiceView"
    p:successView="addServiceView"
    p:commandName="registeredService"
    p:validator-ref="registeredServiceValidator"
    p:sessionForm="true">
    <constructor-arg index="0" ref="servicesManager" />
    <constructor-arg index="1" ref="attributeRepository" />
  </bean>

  <bean id="editRegisteredServiceSimpleFormController"
    class="org.jasig.cas.services.web.RegisteredServiceSimpleFormController"
    p:formView="editServiceView"
    p:successView="editServiceView"
    p:commandName="registeredService"
    p:validator-ref="registeredServiceValidator"
    p:sessionForm="false">
    <constructor-arg index="0" ref="servicesManager" />
    <constructor-arg index="1" ref="attributeRepository" />
  </bean>

  <bean id="registeredServiceValidator"
      class="org.jasig.cas.services.web.support.RegisteredServiceValidator"
      p:servicesManager-ref="servicesManager" />

  <bean id="manageRegisteredServicesMultiActionController"
      class="org.jasig.cas.services.web.ManageRegisteredServicesMultiActionController">
    <constructor-arg index="0" ref="servicesManager" />
  </bean>
</beans>

<!-- vim: set ts=2 et sw=2 ai: -->

