<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util-2.5.xsd">

  <aop:aspectj-autoproxy/>

  <!-- ========================= GENERAL DEFINITIONS ========================= -->
  <bean id="sessionFactory"
    class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
    lazy-init="true">
    <property name="dataSource" ref="katari.dataSource"/>
    <property name="configurationClass"
      value="org.hibernate.cfg.AnnotationConfiguration"/>
    <property name="hibernateProperties" ref='katari.hibernateProperties'/>
    <property name="entityInterceptor" ref="trailsInterceptor" />
    <property name="annotatedClasses">
      <ref bean='trails.persistentClasses' />
    </property>
  </bean>

  <bean id="trailsInterceptor"
    class="org.trails.hibernate.TrailsSecurityInterceptor"/>

  <!-- <bean id="productService" class="org.blah.service.ProductService" /> -->
  <!-- Message source for this context, loaded from localized "messages_xx" files -->
  <bean id="messageSource"
      class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames" ref="trails.messageSourceBasenames"/>
  </bean>

  <bean id="trailsMessageSource" class="org.trails.i18n.SpringMessageSource">
    <property name="messageSource" ref="messageSource"/>
    <property name="localeHolder" ref="localeHolder"/>
  </bean>

  <!-- ========================= RESOURCE DEFINITIONS ========================= -->

  <!-- it creates AOP proxies based on all candidate Advisors in the current
  BeanFactory -->
  <bean
    class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
  />
  <bean id="transactionAdvisor"
    class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
    <property name="transactionInterceptor" ref="transactionInterceptor"/>
  </bean>

  <bean id="transactionInterceptor"
    class="org.springframework.transaction.interceptor.TransactionInterceptor">
    <property name="transactionAttributeSource" ref="transactionAttributeSource"/>
    <property name="transactionManager" ref="transactionManager"/>
  </bean>

  <bean id="transactionManager" autowire="autodetect"
      class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="dataSource">
      <ref bean="katari.dataSource"/>
    </property>
    <property name="sessionFactory">
      <ref local="sessionFactory" />
    </property>
  </bean>

  <bean id="transactionAttributeSource"
      class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>

  <bean id="persistenceService"
    class="org.trails.hibernate.SecurePersistenceServiceImpl">
    <property name="sessionFactory">
      <ref local="sessionFactory" />
    </property>
  </bean>

  <bean id="springBeanProvider"
    class="com.globant.katari.trails.SpringBeanProvider"/>

  <bean id="descriptorService"
      class="org.trails.descriptor.TrailsDescriptorService" init-method="init">
    <property name="types">
      <bean id="persistenceService.allTypes"
          class="org.springframework.beans.factory.config.PropertyPathFactoryBean"/>
    </property>
    <property name="descriptorFactory" ref="descriptorFactory"/>
    <property name="decorators">
      <list>
        <ref local="hibernateDescriptorDecorator"/>
        <bean name="annotationDecorator"
            class="org.trails.descriptor.annotation.AnnotationDecorator"/>
        <bean name="ognlDecorator"
          class="org.trails.descriptor.annotation.OgnlAnnotationsDecorator">
          <!-- Makes the bean springBeanProvider available to ognl under
            the variable name 'spring' -->
          <property name="context">
            <map>
              <entry key="spring">
                <ref bean="springBeanProvider" />
              </entry>
            </map>
          </property>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="descriptorFactory"
      class="org.trails.descriptor.ReflectionDescriptorFactory">
    <property name="methodExcludes">
      <list>
        <value>shouldExclude</value>
        <value>set.*</value>
        <value>get.*</value>
        <value>is.*</value>
        <value>equals</value>
        <value>wait</value>
        <value>toString</value>
        <value>notify.*</value>
        <value>hashCode</value>
      </list>
    </property>
    <property name="propertyExcludes">
      <list>
        <value>exclude.*</value>
        <value>class</value>
      </list>
    </property>
  </bean>

  <bean id="hibernateDescriptorDecorator"
      class="org.trails.hibernate.HibernateDescriptorDecorator">
    <property name="localSessionFactoryBean" ref="&amp;sessionFactory"/>
    <property name="descriptorFactory" ref="descriptorFactory"/>
  </bean>

  <bean id="validateUniqueAspect"
      class="org.trails.validation.ValidateUniqueAspect"
      factory-method="aspectOf">
    <property name="descriptorService" ref="descriptorService"/>
    <property name="persistenceService" ref="persistenceService"/>
  </bean>

  <bean id="descriptorInternationalizationAspect"
    class="org.trails.i18n.DescriptorInternationalization"
    factory-method="aspectOf">
    <property name="trailsMessageSource" ref="trailsMessageSource"/>
  </bean>

  <bean id="searchBlockFinder" class="org.trails.finder.BaseBlockFinder">
    <property name="defaultBlockAddress">
      <bean class="org.apache.tapestry.util.ComponentAddress">
        <constructor-arg  index="0">
          <value>trails:SearchBlocks</value>
        </constructor-arg>
        <constructor-arg  index="1">
          <value>simpleSearch</value>
        </constructor-arg>
      </bean>
    </property>
    <property name="editorMap" ref='trails.searchMap'/>
  </bean>

  <!-- This bean is intended to be overriden in the parent context to add
  additional search or to modify the current ones. -->
  <bean id='trails.searchMapOverrides' class='java.util.LinkedHashMap'/>

  <bean id='trails.searchMap'
    class='com.globant.katari.core.spring.OverridingMapFactoryBean'>
    <property name='overridingMap' ref='trails.searchMapOverrides'/>
    <property name='sourceMap'>
      <map>
        <entry>
          <key>
            <value>string</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:SearchBlocks</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>stringSearch</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>objectReference</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:SearchBlocks</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>associationSearch</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>numeric</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:SearchBlocks</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>numberSearch</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>date</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:SearchBlocks</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>dateSearch</value>
            </constructor-arg>
          </bean>
        </entry>
      </map>
    </property>
  </bean>

  <bean id="editorService" class="org.trails.finder.EditorBlockFinder">
    <property name="defaultBlockAddress">
      <bean class="org.apache.tapestry.util.ComponentAddress">
        <constructor-arg  index="0">
          <value>trails:Editors</value>
        </constructor-arg>
        <constructor-arg  index="1">
          <value>stringEditor</value>
        </constructor-arg>
      </bean>
    </property>
    <property name="editorMap" ref='trails.editorMap'/>
  </bean>

  <!-- This bean is intended to be overriden in the parent context to add
  additional editors or to modify the current ones. -->
  <bean id='trails.editorMapOverrides' class='java.util.LinkedHashMap'/>

  <bean id='trails.editorMap'
    class='com.globant.katari.core.spring.OverridingMapFactoryBean'>
    <property name='overridingMap' ref='trails.editorMapOverrides'/>
    <property name='sourceMap'>
      <map>
        <entry>
          <key>
            <value>
               supportsExtension('org.trails.descriptor.annotation.PossibleValuesDescriptorExtension')
               or
               supportsExtension('org.trails.descriptor.annotation.PossibleValuesDescriptorExtension')
            </value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>filteredAssociation</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>hidden</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>hidden</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>readOnly</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>readOnly</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>richText</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>CustomEditors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>FCKEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>name.toLowerCase().endsWith('password')</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>passwordEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>string and !large and !identifier</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>stringEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>string and large and !identifier</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>textAreaEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>date</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>dateEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>numeric and !identifier</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>numberEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>identifier</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>identifierEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>boolean</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>booleanEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>supportsExtension('org.trails.descriptor.extension.EnumReferenceDescriptor')</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>enumEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>supportsExtension('org.trails.descriptor.extension.BlobDescriptorExtension')</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>blobEditor</value>
            </constructor-arg>
          </bean>
        </entry>

<!--
        <entry>
          <key>
            <value>supportsExtension('org.trails.descriptor.OwningObjectReferenceDescriptor')</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>owningReferenceEditor</value>
            </constructor-arg>
          </bean>
        </entry>
-->

        <entry>
          <key>
            <value>objectReference</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>referenceEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>collection</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>collectionEditor</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>embedded</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg  index="0">
              <value>trails:Editors</value>
            </constructor-arg>
            <constructor-arg  index="1">
              <value>embedded</value>
            </constructor-arg>
          </bean>
        </entry>
      </map>
    </property>
  </bean>

  <bean id="viewerService" class="org.trails.finder.EditorBlockFinder">
    <property name="defaultBlockAddress">
      <bean class="org.apache.tapestry.util.ComponentAddress">
        <constructor-arg index="0">
          <value>trails:Viewers</value>
        </constructor-arg>
        <constructor-arg index="1">
          <value>stringViewer</value>
        </constructor-arg>
      </bean>
    </property>
    <property name="editorMap" ref='trails.viewerMap'/>
  </bean>

  <!-- This bean is intended to be overriden in the parent context to add
  additional viewers or to modify the current ones. -->
  <bean id='trails.viewerMapOverrides' class='java.util.LinkedHashMap'/>

  <bean id='trails.viewerMap'
    class='com.globant.katari.core.spring.OverridingMapFactoryBean'>
    <property name='overridingMap' ref='trails.viewerMapOverrides'/>
    <property name='sourceMap'>
      <map>
        <entry>
          <key>
            <value>hidden</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg index="0">
              <value>trails:Viewers</value>
            </constructor-arg>
            <constructor-arg index="1">
              <value>hidden</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>richText</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg index="0">
              <value>trails:Viewers</value>
            </constructor-arg>
            <constructor-arg index="1">
              <value>htmlTextViewer</value>
            </constructor-arg>
          </bean>
        </entry>
        <entry>
          <key>
            <value>supportsExtension('org.trails.descriptor.extension.BlobDescriptorExtension')</value>
          </key>
          <bean class="org.apache.tapestry.util.ComponentAddress">
            <constructor-arg index="0">
              <value>trails:Viewers</value>
            </constructor-arg>
            <constructor-arg index="1">
              <value>blobViewer</value>
            </constructor-arg>
          </bean>
        </entry>
      </map>
    </property>
  </bean>

  <bean id="hibernateValidationAspect"
    class="org.trails.validation.HibernateValidationAspect"
    factory-method="aspectOf">
    <property name="hibernateClassValidatorFactory"
      ref="hibernateClassValidatorFactory"/>
  </bean>

  <bean id="hibernateClassValidatorFactory"
    class="org.trails.validation.HibernateClassValidatorFactory">
    <property name="messageSource" ref="trailsMessageSource"/>
    <property name="localeHolder" ref="localeHolder"/>
  </bean>

  <bean id="localeHolder" class="com.globant.katari.trails.KatariLocaleHolder"/>

</beans>

<!-- vim: set ts=2 et sw=2 ai: -->

