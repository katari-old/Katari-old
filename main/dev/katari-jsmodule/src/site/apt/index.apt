~~~ vim: set sw=1 et ts=1 ai:

Js modules

 This module is used to support packing javascript in jar files, making
 it possible to manage them with maven, deploying to repositories and tracking
 dependencies and versions.

 Additionally, this module resolves js dependencies and, in non-debug mode,
 bundles them.

Using this module

 To include this module in a Katari based application, simply put a line of the
 form:

------
  <katari:import module="com.globant.katari.jsmodule"/>
------

 Then, add the dependencies to you pom file:
 
-----
  <dependency>
    <groupId>com.globant.jslib</groupId>
    <artifactId>jquery</artifactId>
    <version>1.4.2</version>
  </dependency>
-----

 And finally, import the javascript file like this:

-----
  <script type='text/javascript'
    src='${baseweb}/module/jsmodule/com/globant/jslib/jquery/jquery.js'>
-----

Dependency resolution and bundling

 To use this module dependency resolution and bundling, you need to include
 katari-loader.js in your freemarker file and initialize your loader:

----
 <script type="text/javascript"
   src="${baseweb}/module/jsmodule/com/globant/katari/jsmodule/js/katari-loader.js">
 </script>
 <script type="text/javascript">
  Loader = new katari.jsmodule.Loader('${baseweb}');
 </script>
----

 Then, whenever you need a js file, use:

----
 <script type="text/javascript">
   Loader.importFile('/com/globant/jslib/jquery/jquery.js');
  </script>
----

 And finally, usually at the end of your freemarker file, tell the loader to
 load all imported files:

----
  <script type="text/javascript">
    jQuery(document).ready(function () {
      Loader.load();
    });
  </script>
----

 If your application is in debug mode, the loader will include all javascript
 files as they are stored. In non-debug mode, the loader compresses and bundles
 all javascript sources in a single file.

Packaging javascript

 To package a javascript library in a jar file, you just create a jar with the
 js files in it, in a standard java package format. Then you need to add a meta
 file META-INF/katari-resource-set describing where in the classpath to search
 for the files. For example, for jquery:
 
-----
staticContentPath=/com/globant/jslib/jquery

mimeType.js=text/javascript

debugPrefix=../jquery/src/main/resources
-----

 To declare the dependencies for a file named, for example [something].js, add
 a file [something].dep.js in the same directory as the source javascript with:

-----
 {
  js: ["/com/globant/katari/jsmodule/testfile/jquery.js",
       "/com/globant/katari/jsmodule/testfile/jquery-ui.js"
      ]
 }
-----

 All the dependent content for the file must be available from the jsmodule
 katari module.

